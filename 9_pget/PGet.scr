module PGet;

sig <go> "http.HeadReq" from "github.com/rhu1/scribble-go-examples/9_pget/http" as Head;
sig <go> "http.GetReq" from "github.com/rhu1/scribble-go-examples/9_pget/http" as Get;
sig <go> "http.Response" from "github.com/rhu1/scribble-go-examples/9_pget/http" as Res;

sig <go> "msg.Meta" from "github.com/rhu1/scribble-go-examples/9_pget/msg" as Meta;
sig <go> "msg.Job" from "github.com/rhu1/scribble-go-examples/9_pget/msg" as Job;
sig <go> "msg.Data" from "github.com/rhu1/scribble-go-examples/9_pget/msg" as Data;
sig <go> "msg.Done" from "github.com/rhu1/scribble-go-examples/9_pget/msg" as Done;

global protocol Basic(role M, role F, role S) {
  // Get metadata (size)
  Head from F[1] to S[1];
  Res  from S[1] to F[1];
  Meta from F[1] to M[1];

  // Send jobs.
  Job from M[1] to F[1,K];
  Get from F[1,K] to S[1];
  Res from S[1] to F[1,K];
  Data from F[1,K] to M[1];

  (Sync@A) from F[1,K] to M[1];
}

global protocol Sync(role A, role B) {
  Done from A to B;
}

global protocol Foreach(role M, role F, role S) {
  // Get metdata (size)
  Head from F[1] to S[1];
  Res  from S[1] to F[1];
  Meta from F[1] to M[1];

  Job from M[1] to F[1,K];
  // Send jobs.
  foreach F[I:1,K] {
    Get from F[I] to S[1];
    Res from S[1] to F[I];
  }
  Data from F[1,K] to M[1];
  (Sync@A) from F[1,K] to M[1];
}
